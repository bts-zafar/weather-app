{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","description","src","icon","alt","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAEMA,EACC,mCADDA,EAEE,0CA2DOC,MAzDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KA2Bb,OACE,qBAAKC,UAAkC,oBAAhBF,EAAQG,MAA0BH,EAAQG,KAAKC,KAAQ,GAAO,WAAqB,MAA1G,SACE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBAAOG,KAAK,OACZH,UAAU,aACVI,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAhCO,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA2Be,oBAAhBlB,EAAQG,KACjB,gCACA,sBAAKD,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SA1BU,SAACsB,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAU,WAAY,YAKxGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAiBHE,CAAY,IAAIC,WAEzC,sBAAKhC,UAAU,cAAf,UACA,sBAAKA,UAAU,OAAf,UAAuBiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGqC,cAC9C,qBAAKnC,UAAU,OAAf,SAAsB,qBAAKoC,IAAG,0CAAqCtC,EAAQA,QAAQ,GAAGuC,KAAxD,QAAqEC,IAAI,oBAGnG,GACJ,sBAAKtC,UAAU,SAAf,iCAA4C,mBAAGuC,KAAI,sCAAyChC,OAAO,SAAvD,0BAA5C,+BC7CMiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b5b3256.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nconst api = {\n  key: \"0d4362ae2e2fcaf3e8af9e9908baec67\",\n  base: \"http://api.openweathermap.org/data/2.5/\"\n} \nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt =>{\n    if (evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  }\n\n  const dateBuilder = (d) =>{\n    let months = [\"January\", \"Feburary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return (\n    <div className={typeof weather.main != \"undefined\" ? ( ( weather.main.temp  > 16 ) ? 'app-warm' : 'app'): 'app' }>\n      <main>\n        <div className=\"search_box\">\n          <input type=\"text\" \n          className=\"search-bar\"\n          placeholder=\"search..\" \n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search} />\n        </div>\n          {(typeof weather.main != \"undefined\") ? (\n          <div>\n          <div className=\"location-boxx\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n          <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n          <div className=\"weather\">{weather.weather[0].description}</div>\n         <div className=\"icon\"><img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}  alt=\"weather\"/></div>\n        </div>\n        </div>\n        ) : ('')}\n         <div className=\"footer\">This APP Created by <a href={`https://www.instagram.com/z__a_z__/`} target=\"_blank\"> Zafar Abbas</a> with ðŸ’œ.</div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}